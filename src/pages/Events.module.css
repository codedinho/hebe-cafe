/* Updated styling for a cleaner, modern look */

/* Wrapper centers content with a light neutral background */
.pageContent {
  padding: 2rem;
  padding-top: 3rem;
  padding-bottom: 0;
}

.eventsWrapper {
  width: 100%;
  box-sizing: border-box;
}

/* Header Section Styles â€“ left aligned for a clean feel */
.eventsHeader {
  text-align: left;
  margin-bottom: 2rem;
}

.title {
  font-size: 3rem;
  color: var(--color-darktractoa);
  font-weight: 100;
}

.subtitle {
  font-size: 1.2rem;
  margin-top: 1rem;
  color: var(--color-forrest-green);
}

/* Grid layout: 4 columns on desktop, 2 on mobile */
.eventsGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.6rem;
}

/* Each event card */
.eventCard {
  overflow: hidden;
  position: relative;
  border-radius: 5px;
}

/* Force square images with no rounded corners */
.eventImage {
  width: 100%;
  aspect-ratio: 1 / 1;
  object-fit: cover;
  display: block;
  transition: transform 0.5s ease;
}

/* Zoom effect for image on card hover */
.eventCard:hover .eventImage {
  transform: scale(1.05);
}

/* -------------------- Hover Overlay Styling -------------------- */
/* Overlay container appears on hover, displaying event details */
.cardOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6);
  color: #fff;
  opacity: 0;
  transition: opacity 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  text-wrap: wrap;
}

.eventCard:hover .cardOverlay {
  opacity: 1;
}

/* Title, description, and date styles for overlay */
.cardTitle {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
  padding:2rem;
}

.cardDescription {
  font-size: 1rem;
  margin-bottom: 0.5rem;
  color: var(--color-main-bg);
}

.cardDate {
  font-size: 1rem;
  color: var(--color-main-bg);
  font-family: var(--font-description);
  font-weight: bold;
}

/* Responsive adjustments */
@media (max-width: 1200px) {
  .eventsGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .eventsGrid {
    grid-template-columns: repeat(1, 1fr);
  }
  .title {
    font-size: 2rem;
  }
  .eventsWrapper {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
}

@keyframes slideInFromLeft {
  from {
    transform: translateX(-50px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInFromRight {
  from {
    transform: translateX(50px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* -------------------- Services Banner -------------------- */
.servicesBanner {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: flex-start;
  margin: 1rem 0;
}

.serviceIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  color: var(--color-forrest-green);
  transition: color 0.3s ease;
  cursor: default;
}

.serviceIcon:hover {
  color: var(--color-darktractoa);
}

@media (max-width: 600px) {
  .serviceIcon {
    font-size: 1.2rem;
  }
}

/* -------------------- Load More Container & Spinner -------------------- */
.loadMoreContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
  padding-bottom: 1rem; 
}

/* Spinner styles */
.spinner {
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-left-color: var(--color-forrest-green);
  border-radius: 50%;
  width: 30px;
  height: 30px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* -------------------- Load More Button -------------------- */
.loadMoreButton {
  padding: 0.75rem 1.5rem;
  background-color: var(--color-forrest-green);
  color: var(--color-main-bg);
  font-family: var(--font-secondary);
  border: none;
  border-radius: 15px;
  cursor: pointer;
  font-size: 1.2rem;
  font-weight: 100;
  transition: background-color 0.3s ease;
}

.loadMoreButton:hover {
  background-color: var(--color-darktractoa);
}

/* -------------------- Divider Style -------------------- */
.divider {
  border: 0;
  border-top: 2px solid #f0e5d0;
  width: 100%;
  margin: 2rem 0;
}

.animateIn {
  animation: fadeInUp 0.75s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.pageContainer {
  padding: 2rem;
}

/* Optional: if you want an initial animation on page load only, you can add it here.
   (Make sure it doesn't re-trigger on state updates.)
*/
.initialAnimation {
  animation: fadeInUp 0.75s ease-out;
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
